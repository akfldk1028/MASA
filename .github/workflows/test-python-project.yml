name: "🐍 Python Project Builder Test"
on:
  push:
    branches: [main]
  workflow_dispatch:  # 수동 실행도 가능

jobs:
  create-python-app:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Create Python Weather App
        id: claude-python
        uses: ./
        with:
          prompt: |
            Python으로 날씨 앱 만들어줘:
            
            1. weather_app.py - 메인 파일
               - OpenWeatherMap API 사용 (requests 라이브러리)
               - 도시 이름 입력받아서 날씨 정보 출력
               - 온도, 습도, 날씨 상태 표시
               - 에러 처리 포함
            
            2. requirements.txt
               - 필요한 패키지들
            
            3. README.md
               - 프로젝트 설명
               - 설치 방법
               - 사용 방법
               - API 키 설정 가이드
            
            4. .env.example
               - API 키 템플릿
            
            5. test_weather.py
               - 간단한 유닛 테스트
               
            모든 파일을 python-weather-app/ 폴더에 생성해줘.
            코드는 깔끔하고 주석 포함해서 작성해줘.
            
          allowed_tools: "Write,Read,Edit"
          timeout_minutes: "10"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
      - name: 📁 Check created files
        run: |
          echo "=== Created Python Project Files ==="
          find python-weather-app -type f -name "*.py" -o -name "*.txt" -o -name "*.md" | sort
          echo ""
          echo "=== Project Structure ==="
          tree python-weather-app || ls -la python-weather-app/
          
      - name: 🧪 Test Python installation
        run: |
          cd python-weather-app
          echo "=== Installing dependencies ==="
          python -m pip install -r requirements.txt
          
          echo ""
          echo "=== Running tests ==="
          python -m pytest test_weather.py -v || python test_weather.py
          
      - name: 📊 Show main code
        run: |
          echo "=== Main Weather App Code ==="
          cat python-weather-app/weather_app.py
          
      - name: 💾 Commit created project
        run: |
          git config user.name "Claude AI Bot"
          git config user.email "claude@anthropic.com"
          
          git add python-weather-app/
          git commit -m "🐍 Add Python weather app created by Claude AI
          
          - Weather API integration
          - Unit tests included
          - Complete documentation
          
          Generated by Claude Code Action" || echo "No changes to commit"
          
          git push origin main || echo "Push failed or no changes"
          
      - name: 📝 Summary
        if: always()
        run: |
          echo "## 🎉 Python Project Creation Summary"
          echo ""
          echo "**Status**: ${{ steps.claude-python.outputs.conclusion }}"
          echo "**Execution Log**: ${{ steps.claude-python.outputs.execution_file }}"
          echo ""
          if [ -d "python-weather-app" ]; then
            echo "✅ Project created successfully!"
            echo "Files created: $(find python-weather-app -type f | wc -l)"
          else
            echo "❌ Project creation failed"
          fi
          
      - name: Upload execution log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: claude-python-log
          path: ${{ steps.claude-python.outputs.execution_file }}
          retention-days: 7